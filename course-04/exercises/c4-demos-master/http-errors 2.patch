diff --git a/11-udagram-app/package.json b/11-udagram-app/package.json
index f2cfcc9..9e815ff 100644
--- a/11-udagram-app/package.json
+++ b/11-udagram-app/package.json
@@ -7,11 +7,13 @@
     "test": "echo \"Error: no test specified\" && exit 1"
   },
   "dependencies": {
+    "http-errors": "^1.7.2",
     "middy": "^0.25.0",
     "uuid": "^3.3.2"
   },
   "devDependencies": {
     "@types/aws-lambda": "^8.10.17",
+    "@types/http-errors": "^1.6.1",
     "@types/node": "^10.14.4",
     "aws-sdk": "^2.433.0",
     "serverless-aws-documentation": "^1.1.0",
diff --git a/11-udagram-app/src/getImages.ts b/11-udagram-app/src/getImages.ts
index 9f25537..7ba56c2 100644
--- a/11-udagram-app/src/getImages.ts
+++ b/11-udagram-app/src/getImages.ts
@@ -2,7 +2,8 @@ import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda'
 import 'source-map-support/register'
 import * as AWS  from 'aws-sdk'
 import * as middy from 'middy'
-import { cors } from 'middy/middlewares'
+import * as createError from 'http-errors'
+import { cors, httpErrorHandler } from 'middy/middlewares'
 
 const docClient = new AWS.DynamoDB.DocumentClient()
 
@@ -16,12 +17,7 @@ export const handler = middy(async (event: APIGatewayProxyEvent): Promise<APIGat
   const groupExists = await isGroupExists(groupId)
 
   if (!groupExists) {
-    return {
-      statusCode: 404,
-      body: JSON.stringify({
-        error: 'Group does not exist'
-      })
-    }
+    throw createError(404, 'Group does not exist')
   }
 
   const images = await getImagesPerGroup(groupId)
@@ -34,7 +30,9 @@ export const handler = middy(async (event: APIGatewayProxyEvent): Promise<APIGat
   }
 })
 
-handler.use(cors())
+handler
+  .use(httpErrorHandler())
+  .use(cors())
 
 async function isGroupExists(groupId: string) {
   const result = await docClient
